{"version":3,"file":"ThePostUser.045a8e5e.js","sources":["../../src/components/post/PostContent.jsx","../../src/extend/ValueValidator.js","../../src/components/post/extend/FormComment.jsx","../../src/components/post/PostComments.jsx","../../src/pages/ThePostUser.jsx"],"sourcesContent":["import { subStringLength, parsedNumberId } from './../../extend/HelpersDom';\r\n\r\nexport default function PostContent({item}) {\r\n   const { id, title, body } = item;\r\n\r\n   return <div className=\"card border border-dark shadow\">\r\n            <header className=\"card-header \"> \r\n               <p className=\"fw-bolder mb-1\"> \r\n                  Post nro : { parsedNumberId(id) } \r\n               </p>\r\n               <p className=\"mb-1 text-uppercase\"> {  subStringLength(title, 45, true) }</p> \r\n            </header>\r\n            <article className=\"card-body\">\r\n               <p>\r\n               { body } \r\n               </p>\r\n               <p>\r\n                  - Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatibus id incidunt dolor minima eos, nihil est inventore temporibus magnam autem at sint quod corporis obcaecati dignissimos error sunt similique,\r\n               </p>\r\n               <p>\r\n               Lorem ipsum dolor sit amet consectetur adipisicing, elit. Praesentium ad quos nemo, quibusdam adipisci quod iure quaerat nobis possimus laudantium voluptas laboriosam error assumenda iste aliquid esse corporis nihil consequuntur.\r\n               </p>\r\n                              <p>\r\n               Lorem ipsum dolor sit amet consectetur adipisicing, elit. Praesentium ad quos nemo, quibusdam adipisci quod iure quaerat nobis possimus laudantium voluptas laboriosam error assumenda iste aliquid esse corporis nihil consequuntur.\r\n               </p>\r\n\r\n            </article>\r\n         </div>   \r\n}","const regexVal = {\r\n   StringNormal: ([min,max]) => new RegExp(`^[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ.#-\\\\s]{${min},${max}}$`,'g'),\r\n   StringEmail: () => new RegExp(`^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$`,'g')\r\n};\r\n\r\nconst valString = (flag, {value, range}) => {\r\n   value = value.trim();\r\n   const expresion = regexVal[flag](range);\r\n   return expresion.test(value);\r\n};\r\n\r\nexport { valString };","import { useState, useEffect, useRef } from 'react';\r\n\r\nimport { focusElement, subStringLength } from './../../../extend/HelpersDom';  \r\nimport { valString } from './../../../extend/ValueValidator.js';  \r\n\r\nexport default function FormComment({callback}) {\r\n\r\n   const [ user, setUser ] = useState( {name:'',email:'', body:''} );\r\n   const [ val, setVal ] = useState( {name:false, email:false, body: false} );\r\n   const [ valState, setValState ] = useState(true);\r\n   const [ init, setInit ] = useState(false);\r\n\r\n   const inputComment = useRef(null);\r\n\r\n   // when we're init the component \r\n   useEffect(() => focusElement('name') ,[]);\r\n   useEffect(() => {\r\n      // check valState\r\n      if(!valState && checkSendCallBack(val)) {\r\n         callback(user); // parent function comunication\r\n         setInit(true);\r\n         focusElement('body');\r\n\r\n         inputComment.current.value = ''; //clear input comment\r\n      } \r\n\r\n   },[valState]);\r\n   \r\n   const checkSendCallBack = (obj) => {\r\n      setValState(true); \r\n      const findVal = Object.entries(obj).find( ([, value]) => value);\r\n\r\n      if (!findVal) return true;\r\n      else {\r\n         focusElement(findVal[0]); //prop reference\r\n         return false;\r\n      }\r\n   };\r\n\r\n   const ValConfigKeys =  {\r\n      name: (value) => !valString('StringNormal', { value, range:[2, 10] }),\r\n      email: (value) => !valString('StringEmail', { value, range:[2, 30] }),\r\n      body: (value) => !valString('StringNormal', { value, range:[2, 70] })\r\n   };\r\n\r\n   const funcValidator = (key, value) => ValConfigKeys[key](value);\r\n\r\n   const handleOnInput = ({target}) => {\r\n      const { value, id } = target;\r\n\r\n      setVal((prev) => ({ ...prev, [id]: funcValidator(id, value) }) );\r\n      setUser((prev) => ({ ...prev, [id]: value }) );\r\n      setValState(true);\r\n   };\r\n\r\n   const handleOnClick = () => {\r\n      setVal((prev) => ({ ...prev, name: funcValidator('name', user.name) }) );\r\n      setVal((prev) => ({ ...prev, email: funcValidator('email', user.email) }) );\r\n      setVal((prev) => ({ ...prev, body: funcValidator('body', user.body) }) );\r\n      setValState(false);\r\n   };\r\n\r\n   const isInvalid = (bool) => bool ? 'is-invalid' : '';\r\n\r\n   return  <> \r\n            <div className=\"d-flex flex-wrap justify-content-between\">\r\n              <label htmlFor={!init ? 'name':'body'} className=\"mb-2\">Escribe un comentario:</label>\r\n              {\r\n                 init ? \r\n                 <span>\r\n                    <small className=\"text-uppercase\">{ subStringLength(user.name, 10, true) }</small>\r\n                     - <small className=\"text-primary\">{ user.email }</small>\r\n                 </span> : null\r\n              }\r\n              \r\n            </div>\r\n               <form className=\"row g-2\">\r\n                  {\r\n                    !init ? <>  \r\n                        <div className=\"col-6\">\r\n                           <input onInput={handleOnInput} className={`form-control ${ isInvalid(val.name) }`} \r\n                                  type=\"text\" id=\"name\"  placeholder=\"Ingrese nombre\" maxLength=\"10\"/>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                           <input onInput={handleOnInput} className={`form-control ${ isInvalid(val.email) }`}\r\n                                  type=\"text\" id=\"email\" placeholder=\"Ingrese email\" maxLength=\"30\"/>\r\n                        </div>\r\n                      </> : null\r\n                  }\r\n                  <div className=\"col-10\" >\r\n                     <textarea ref={inputComment} onInput={handleOnInput} className={`form-control ${ isInvalid(val.body) }`} \r\n                        type=\"text\" id=\"body\" rows=\"2\" placeholder=\"Escribe un commentario\" maxLength=\"70\">\r\n                     </textarea>\r\n                  </div>\r\n                  <div className=\"col-2 d-flex\">\r\n                     <button onClick={handleOnClick} type=\"button\" className=\"btn btn-outline-primary w-100\" >\r\n                        <i className=\"bx bx-sm bx-send\"></i>\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </>\r\n}","import { useState } from 'react';\r\n\r\nimport { subStringLength } from './../../extend/HelpersDom';\r\nimport FormComment from './extend/FormComment';\r\n\r\nexport default function PostComments({items}){\r\n   const [ comments, setComments  ] = useState(items);\r\n\r\n   const handleFormComment = ({name, email, body}) => {\r\n      const { postId, id } = comments[comments.length - 1]; //preconfig by original comment\r\n      const newComment = { postId, id: id + 1, name, email, body };\r\n\r\n      setComments((prev) => ([ newComment, ...prev ]) );\r\n   };\r\n\r\n   return <>\r\n            <div className=\"my-2\">\r\n               <FormComment callback={handleFormComment}/>                       \r\n            </div>\r\n            <hr/>\r\n            <div className=\"my-2 max-h-30 overflow-auto scroll-primary pe-2\">\r\n               {\r\n                  comments.map( ({name, email, body}, idx) => {\r\n                     return <div key={idx}  className=\"card mb-2 border border-primary\">\r\n                                 <header className=\"card-header p-1 d-flex justify-content-between align-items-center\">\r\n                                    <small className=\"text-uppercase link-hover cursor\">\r\n                                       <i className=\"bx bx-user-pin align-middle me-1\"></i>\r\n                                       { subStringLength(name, 12, true) }\r\n                                    </small>\r\n                                    <small className=\"link-hover\">{ email }</small>\r\n                                 </header>\r\n                                 <article className=\"card-body\">\r\n                                    { body }\r\n                                 </article>\r\n                              </div>\r\n                  })\r\n               }\r\n            </div>\r\n         </>\r\n}","import { useUserHook, usePostHook } from './../hooks/UserHook.js';\r\nimport { Loader } from './../components/Reusable';\r\n\r\nimport UserCardMini from './../components/user/UserCardMini';\r\nimport PostContent from './../components/post/PostContent';\r\nimport PostComments from './../components/post/PostComments';\r\n\r\nexport default function ThePostUser({params}){\r\n\r\n   const { index, sindex } = params;\r\n   const [ user ] = useUserHook(index); // custom hook\r\n   const { post, comments } = usePostHook(sindex);  \r\n\r\n   return <>\r\n             <div className=\"card min-h-3 mb-3\">\r\n             {\r\n               !user.username ? <Loader message=\"Cargando Usuario ...\" state={true}/> : <UserCardMini item={user}/>\r\n             }\r\n             </div>\r\n             <div className=\"row g-3\">\r\n                <div className=\"col-12 col-md-12 col-lg-6 col-xl-5\">\r\n                   <div className=\"position-relative min-h-25\">\r\n                      { \r\n                        !post.body ? <Loader message=\"Cargando Post ...\"/> : <PostContent item={post}/>\r\n                      }\r\n                   </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-12 col-lg-6 col-xl-7\">\r\n                   <div className=\"position-relative min-h-25\">\r\n                      {\r\n                        !comments.length ? <Loader message=\"Cargando Comentarios ...\"/> : <PostComments items={comments}/>\r\n                      }\r\n                   </div>\r\n                </div>\r\n             </div>\r\n          </>\r\n}"],"names":["item","id","title","body","parsedNumberId","subStringLength","callback","user","setUser","useState","name","email","val","setVal","valState","setValState","init","setInit","inputComment","useRef","focusElement","checkSendCallBack","current","value","obj","findVal","Object","entries","find","ValConfigKeys","valString","range","funcValidator","key","handleOnInput","target","prev","handleOnClick","isInvalid","bool","items","comments","setComments","postId","length","newComment","map","idx","params","index","sindex","useUserHook","post","usePostHook","username"],"mappings":"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"}